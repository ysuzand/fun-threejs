/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: peachyroyalty (https://sketchfab.com/peachyroyalty)
License: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
Source: https://sketchfab.com/3d-models/forest-house-52429e4ef7bf4deda1309364a2cda86f
Title: Forest House
*/
import type { Group, Object3DEventMap } from 'three'
import { useRef, useEffect } from 'react'
import { useFrame, useThree } from '@react-three/fiber'
import { useGLTF } from '@react-three/drei'
import { a } from '@react-spring/three'
import houseScene from '@/assets/3d/forest_house.glb'

type HouseProps = {
    isRotating: boolean;
    setIsRotating: (rotate: boolean) => void;
  } &  Record<string, any>;

export default function House({isRotating, setIsRotating, ...props}: HouseProps) {
    const houseRef = useRef<Group<Object3DEventMap>>(null);
    const {gl, viewport} = useThree();
    const { nodes, materials } = useGLTF(houseScene);
    const lastX = useRef(0);
    const rotationSpeed = useRef(0);
    const dampingFactor = 0.95;

  const handlePointerDown = (e) => {
    e.stopPropagation();
    e.preventDefault();
    setIsRotating(true);

    // Calculate the clientX based on whether it's a touch event or a mouse event
    const clientX = e.touches ? e.touches[0].clientX : e.clientX;

    // Store the current clientX position for reference
    lastX.current = clientX;
  };

  const handlePointerUp = (e) => {
    e.stopPropagation();
    e.preventDefault();
    setIsRotating(false);
  };

  const handlePointerMove = (e) => {
    e.stopPropagation();
    e.preventDefault();
    if (isRotating) {
      // If rotation is enabled, calculate the change in clientX position
      const clientX = e.touches ? e.touches[0].clientX : e.clientX;

      // calculate the change in the horizontal position of the mouse cursor or touch input,
      // relative to the viewport's width
      const delta = (clientX - lastX.current) / viewport.width;

      if (houseRef?.current) {
        // Update the island's rotation based on the mouse/touch movement
        houseRef.current.rotation.y += delta * 0.01 * Math.PI;
      }

      // Update the reference for the last clientX position
      lastX.current = clientX;

      // Update the rotation speed
      rotationSpeed.current = delta * 0.01 * Math.PI;
    }
  };


  useFrame(() => {
    if (houseRef?.current) {
        houseRef.current.rotation.y += 0.008
    }
  })

  useEffect(() => {
    const canvas = gl.domElement;
    canvas.addEventListener("pointerdown", handlePointerDown);
    canvas.addEventListener("pointerup", handlePointerUp);
    canvas.addEventListener("pointermove", handlePointerMove);

    return () => {
        canvas.removeEventListener("pointerdown", handlePointerDown);
        canvas.removeEventListener("pointerup", handlePointerUp);
        canvas.removeEventListener("pointermove", handlePointerMove);
    }
  }, [gl, handlePointerDown, handlePointerUp, handlePointerMove])

  return (
    <a.group ref={houseRef} {...props} >
          <mesh
            geometry={nodes.Windows001_Window_0.geometry}
            material={materials.Window}
            position={[170.6, 190.5, -176.1]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.Windows_Window_0.geometry}
            material={materials.Window}
            position={[36.6, 264.3, -120.5]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.Windows002_Window_0.geometry}
            material={materials.Window}
            position={[167.6, 214.1, 45.7]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.SideRoofBase_RoofMoss_0.geometry}
            material={materials.RoofMoss}
            position={[105.8, 237.1, -218.1]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.RoofMoss_RoofMoss_0.geometry}
            material={materials.RoofMoss}
            position={[115.4, 400.3, -46.9]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.HouseFence_WoodPlanks_0.geometry}
            material={materials.WoodPlanks}
            position={[-42.3, 149.2, -75]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          {/**hashigo */}
          <mesh
            geometry={nodes.Stairs_WoodPlanks_0.geometry}
            material={materials.WoodPlanks}
            position={[-87.1, 99.6, -139.1]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.HouseSupportBeams_WoodPlanks_0.geometry}
            material={materials.WoodPlanks}
            position={[0.7, 115, -78.8]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.HouseWoodFloor_WoodPlanks_0.geometry}
            material={materials.WoodPlanks}
            position={[55.4, 131.3, -86.3]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.Chimney_RoofMoss_0.geometry}
            material={materials.RoofMoss}
            position={[191, 511.9, 16.8]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.DoorRoof_RoofMoss_0.geometry}
            material={materials.RoofMoss}
            position={[-1.5, 278.9, -23.1]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.House_House_0.geometry}
            material={materials.House}
            position={[76, 269.2, -49.3]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.Vines001_GrassALPHA_0.geometry}
            material={materials.GrassALPHA}
            position={[-62.5, 118.9, -198.8]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.Vines002_GrassALPHA_0.geometry}
            material={materials.GrassALPHA}
            position={[-21.3, 257.5, -17.5]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.Vines003_GrassALPHA_0.geometry}
            material={materials.GrassALPHA}
            position={[124.9, 260.8, 69.6]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.Vines004_GrassALPHA_0.geometry}
            material={materials.GrassALPHA}
            position={[235.9, 470.1, -54.3]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.Vines005_GrassALPHA_0.geometry}
            material={materials.GrassALPHA}
            position={[234.4, 290.9, -120.1]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.Vines_GrassALPHA_0.geometry}
            material={materials.GrassALPHA}
            position={[125.5, 241.8, -224.9]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.SupportBeams_Window_0.geometry}
            material={materials.Window}
            position={[122.9, 201.4, -235.7]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.FenceRight_WoodFence_0.geometry}
            material={materials.WoodFence}
            position={[-153.6, 93.4, 93.9]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.FenceRight015_WoodFence_0.geometry}
            material={materials.WoodFence}
            position={[-183.3, 94.9, -275.5]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.FenceLeft_WoodFence_0.geometry}
            material={materials.WoodFence}
            position={[-189.2, 98.8, -265]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.FenceRight003_WoodFence_0.geometry}
            material={materials.WoodFence}
            position={[-149.7, 89.4, 101.4]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.SmallRocks_BigRock_0.geometry}
            material={materials.BigRock}
            position={[204, 131.4, -227.8]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.Rocks_BigRock_0.geometry}
            material={materials.BigRock}
            position={[240.6, 143.8, -172.9]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.BTree001_BrichTree_0.geometry}
            material={materials.BrichTree}
            position={[-6.6, 534.7, -287.1]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.BTree_BrichTree_0.geometry}
            material={materials.BrichTree}
            position={[-48.6, 380.9, 155.4]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.BTree002_BrichTree_0.geometry}
            material={materials.BrichTree}
            position={[-89.4, 414.5, -310.2]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.Redwood_BrichTree_0.geometry}
            material={materials.BrichTree}
            position={[121.3, 344.7, -68.3]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.RedwoodAlpha_TreeLeafs_0.geometry}
            material={materials.TreeLeafs}
            position={[109.9, 598.7, -98.6]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.RedwoodChopped_BrichTree_0.geometry}
            material={materials.BrichTree}
            position={[10.3, 107.2, 84.9]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.Stump001_WoodFence_0.geometry}
            material={materials.WoodFence}
            position={[-181.1, 93.1, -193.9]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.Stump002_WoodFence_0.geometry}
            material={materials.WoodFence}
            position={[-363.3, 84, -253.3]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.Stump003_WoodFence_0.geometry}
            material={materials.WoodFence}
            position={[-365.8, 84.1, -61.3]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.Stump_WoodFence_0.geometry}
            material={materials.WoodFence}
            position={[-355, 89.2, -23.8]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.Ground_Ground_0.geometry}
            material={materials.Ground}
            position={[-14.4, 93.3, -97.7]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.GroundPlane_Plane_0.geometry}
            material={materials.Plane}
            position={[0, 59.3, -82.1]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
    </a.group>
  )
}
